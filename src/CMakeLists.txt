add_library(headers INTERFACE)
target_include_directories(headers INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})
add_library(luisarender::headers ALIAS headers)

find_package(spdlog CONFIG REQUIRED)
add_library(spdlog_config INTERFACE)
target_link_libraries(spdlog_config INTERFACE spdlog::spdlog spdlog::spdlog_header_only)

find_package(glm CONFIG REQUIRED)
add_library(glm_config INTERFACE)
target_link_libraries(glm_config INTERFACE glm)
target_compile_definitions(glm_config INTERFACE GLM_FORCE_AVX2 GLM_FORCE_CXX17)

add_subdirectory(core)
add_subdirectory(compute)
add_subdirectory(render)

add_library(plugins INTERFACE)
function(luisa_render_add_plugin name)
    cmake_parse_arguments(PLUGIN "" "CATEGORY" "SOURCES" ${ARGN})
    add_library(${name} MODULE ${PLUGIN_SOURCES})
    target_compile_features(${name} PRIVATE c_std_11 cxx_std_17)
    target_link_libraries(${name} PRIVATE luisarender::core luisarender::compute luisarender::render)
    add_dependencies(plugins ${name})
    list(FILTER PLUGIN_SOURCES INCLUDE REGEX ".*\\.h")
    set_target_properties(${name} PROPERTIES PUBLIC_HEADER "${PLUGIN_SOURCES}")
    install(TARGETS ${name} LIBRARY DESTINATION lib/${PLUGIN_CATEGORY} PUBLIC_HEADER DESTINATION include/${PLUGIN_CATEGORY})
endfunction()

add_subdirectory(bsdfs)
add_subdirectory(cameras)
add_subdirectory(films)
add_subdirectory(filters)
add_subdirectory(integrators)
add_subdirectory(lights)
add_subdirectory(tasks)
add_subdirectory(samplers)
add_subdirectory(shapes)
add_subdirectory(transforms)

add_subdirectory(backends)
add_subdirectory(kernels)

add_library(luisarender INTERFACE)
target_link_libraries(luisarender INTERFACE luisarender::core luisarender::render luisarender::compute luisarender::backends luisarender::kernels plugins)
add_library(luisarender::luisarender ALIAS luisarender)

function(luisa_render_add_application name)
    cmake_parse_arguments(APP "" "" "SOURCES" ${ARGN})
    add_executable(${name} ${APP_SOURCES})
    target_compile_features(${name} PRIVATE c_std_11 cxx_std_17)
    target_link_libraries(${name} PRIVATE luisarender::luisarender)
    install(TARGETS ${name} DESTINATION bin)
endfunction()

add_subdirectory(apps)
